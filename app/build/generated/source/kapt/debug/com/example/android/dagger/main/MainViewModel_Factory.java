// Generated by Dagger (https://dagger.dev).
package com.example.android.dagger.main;

import com.example.android.dagger.user.UserDataRepository;
import com.example.core.common.helper.ResourceHelper;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainViewModel_Factory implements Factory<MainViewModel> {
  private final Provider<UserDataRepository> userDataRepositoryProvider;

  private final Provider<ResourceHelper> resourceHelperProvider;

  public MainViewModel_Factory(Provider<UserDataRepository> userDataRepositoryProvider,
      Provider<ResourceHelper> resourceHelperProvider) {
    this.userDataRepositoryProvider = userDataRepositoryProvider;
    this.resourceHelperProvider = resourceHelperProvider;
  }

  @Override
  public MainViewModel get() {
    return newInstance(userDataRepositoryProvider.get(), resourceHelperProvider.get());
  }

  public static MainViewModel_Factory create(
      Provider<UserDataRepository> userDataRepositoryProvider,
      Provider<ResourceHelper> resourceHelperProvider) {
    return new MainViewModel_Factory(userDataRepositoryProvider, resourceHelperProvider);
  }

  public static MainViewModel newInstance(UserDataRepository userDataRepository,
      ResourceHelper resourceHelper) {
    return new MainViewModel(userDataRepository, resourceHelper);
  }
}
