// Generated by Dagger (https://dagger.dev).
package com.example.core.common.user;

import com.example.core.common.storage.Storage;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UserManager_Factory implements Factory<UserManager> {
  private final Provider<Storage> storageProvider;

  public UserManager_Factory(Provider<Storage> storageProvider) {
    this.storageProvider = storageProvider;
  }

  @Override
  public UserManager get() {
    return newInstance(storageProvider.get());
  }

  public static UserManager_Factory create(Provider<Storage> storageProvider) {
    return new UserManager_Factory(storageProvider);
  }

  public static UserManager newInstance(Storage storage) {
    return new UserManager(storage);
  }
}
